{
	/*	TODO heredoc (<<[-]token...token)
		TODO variables ($variable)
		TODO command-interpolation (`...` + $(...))
		TODO maybe do include of perl/ruby etc. for perl <<EOF or perl -e '...'
	*/
	name = "Unix shell (generic)";
	scopeName = "source.shell";
	keyEquivalent = "~^S";
	fileTypes = ( sh, ss );
	firstLineMatch = "^#!.*/(bash|zsh|sh|tcsh)";

    foldingStartMarker = "\\{";
    foldingStopMarker = "\\}";

	patterns = (
		{   name = "declaration.function.shell"; match = "\\b([^ \\t\\n]*)\\s*\\(\\)";
		    captures = { 1 = { name = "entity.name.function"; }; };
		},
		{   name = "keyword.control.shell"; match = "\\b(?:if|then|else|elif|fi|for|in|do|done|select|case|continue|esac|while|until)\\b"; },
		{   name = "keyword.storage.shell"; match = "\\b(?:export)\\b"; },
//		{   name = "constant.numeric.shell"; match = "\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)(L|l|UL|ul|u|U|F|f)?\\b"; foregroundColor = "#F0F8FF"; },
		{   name = "string.single-quoted.shell"; begin = "'"; end = "'"; },
        {   name = "string.double-quoted.shell"; begin = "\""; end = "\"";  swallow = "\\\\."; },
        {   name = "string.backticked.shell"; begin = "`"; end = "`"; swallow = "\\\\."; },
        {   name = "string.dollar-quoted.shell"; begin = "\\$'"; end = "'";  swallow = "\\\\."; },
        {   name = "string.shell-interpolation.shell"; begin = "\\$\\("; end = "\\)"; swallow = "\\\\."; },
        {   name = "string.math.shell"; begin = "\\$\\(\\("; end = "\\)\\)"; swallow = "\\\\."; },
		{   name = "comment.line.number-sign.shell"; match = "(?<!\\$)#(?!\\{).*$"; },
	);
	uuid = "DDEEA3ED-6B1C-11D9-8B10-000D93589AF6";
}

